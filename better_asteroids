Spaceship rocket_triangle = new Spaceship();
Projectile pellet;

void keyReleased() {
    keyboard = 0;
  }

//
int index = 0;

//Setting up the vertices values
float a, b, c, d, e, f;

//Setting up the float values
float speed, angle; 
float accel = 0.5;
float xvel = 0;
float yvel = 0;
float global_x;
float global_y;
float xpos = -500;
float ypos = -500;
int keyboard = 0;
int BOOLEAN = 0;

//////////////////////////////////////////////////////////

class Projectile{
  float pxpos, pypos, pxvel, pyvel;
  Projectile (float xini, float yini, float xvini, float yvini) {
    pxpos = xini;
    pypos = yini;
    pxvel = xvini;
    pyvel = yvini;
  }
  void p_update(){
    pxpos = pxpos - pxvel;
    pypos = pypos - pyvel;
    ellipse (pxpos, pypos, 2, 2);
  }
}

class Spaceship{
  void update(){
    //complicated trig to calculate the location of all the vertices
    a = cosMath(angle, xpos);
    b = sinMath(angle, ypos);
    c = cosMath(angle+2.0944, xpos);
    d = sinMath(angle+2.0944, ypos);
    e = cosMath(angle+4.18879, xpos);
    f = sinMath(angle+4.18879, ypos);
    triangle (a,b,c,d,e,f);
  }
}

float sinMath(float input, float axis){
  float output = 100*sin(input) - axis;
  return output;
}

float cosMath(float input, float axis){
  float output = 100*cos(input) - axis;
  return output;
}

//////////////////////////////////////////////////////////

void setup(){
size(1000,1000);
background (0);
stroke(0);
fill(255);
frameRate(30);
}

void draw() {
  //Resetting the screen before the update
  background(255);
  
  //rotating the object
  if(mousePressed) {
    if(mouseButton == LEFT){
      angle=angle-0.05;
    }
    if(mouseButton == RIGHT){
      angle=angle+0.05;
    }
  }
  
  //Setting the speed of the object
    if(keyPressed && (key == CODED)){
        xvel = xvel + accel*cos(angle);
        yvel = yvel + accel*sin(angle);
    }
    
    xpos = xpos - xvel;
    ypos = ypos - yvel;

  if (keyboard == 0 && keyPressed == true){
    Projectile pellet = new Projectile(xpos, ypos, xvel, yvel);
    keyboard = 1;
    BOOLEAN = 1;
  }

  //Updating the position of the triangle
  rocket_triangle.update();
  if (BOOLEAN == 1){
    pellet.p_update();
  }
  //Updating the position of all pellets
  
}
