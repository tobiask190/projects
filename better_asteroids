Spaceship rocket_triangle = new Spaceship(-500,-500);

//Setting up the vertices values
float a, b, c, d, e, f;

//Setting up the float values
float speed, angle; 
float accel = 0.5;
float xvel = 0;
float yvel = 0;

//////////////////////////////////////////////////////////

class Projectile{
  //if xpos or ypos become a certain value, the pellet is deleted. The name should be left to "null." As an input, the object name
  should be rendered null in order to allow the garbage man to pick it up.
}

class Spaceship{
  float xpos, ypos;
  Spaceship (float xini, float yini) {
    xpos = xini;
    ypos = yini;
  }
  void update(){
    
    //Setting the speed of the object
    if(keyPressed && (key == CODED)){
        xvel = xvel + accel*cos(angle);
        yvel = yvel + accel*sin(angle);
    }
    
    xpos = xpos - xvel;
    ypos = ypos - yvel;
    
    xpos = bounds(xpos);
    ypos = bounds(ypos);
    
    //complicated trig to calculate the location of all the vertices
    a = cosMath(angle, xpos);
    b = sinMath(angle, ypos);
    c = cosMath(angle+2.0944, xpos);
    d = sinMath(angle+2.0944, ypos);
    e = cosMath(angle+4.18879, xpos);
    f = sinMath(angle+4.18879, ypos);
    triangle (a,b,c,d,e,f);
  }
}

float sinMath(float input, float axis){
  float output = 100*sin(input) - axis;
  return output;
}

float cosMath(float input, float axis){
  float output = 100*cos(input) - axis;
  return output;
}

float bounds(float input){
  if (input > 1000) {
    return input = 0;
  }
  else if (input < 0) {
    return input = 1000;
  }
  return input;
}

//////////////////////////////////////////////////////////

void setup(){
size(1000,1000);
background (0);
stroke(0);
fill(255);
frameRate(30);
}

void draw() {
  //Resetting the screen before the update
  background(0);
  
  //rotating the object
  if(mousePressed) {
    if(mouseButton == LEFT){
      angle=angle-0.05;
    }
    if(mouseButton == RIGHT){
      angle=angle+0.05;
    }
  }
  
  
  //Updating the position of the object;
  rocket_triangle.update();
}
