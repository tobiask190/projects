Spaceship rocket_triangle = new Spaceship();
Bullet[] mods;
int BOOLEAN = 0;
int INDEX = 0;

void keyReleased() {
    keyboard = 0;
  }

//Setting up the vertices values
float a, b, c, d, e, f;

//Setting up the float values
float speed, angle = 0; 
float accel = 0.5;
float xvel = 0;
float yvel = 0;
float global_x;
float global_y;
float xpos = -500;
float ypos = -500;
int keyboard = 0;

//////////////////////////////////////////////////////////

class Bullet {
  float velocity = 1;
  float pxpos, pypos, pyvel, pxvel;
  int initialize = 0;
  Bullet (float xini, float yini){
    pxpos = xini;
    pypos = yini;
    pxvel = velocity*cos(angle);
    pyvel = velocity*sin(angle);
  }
  void p_update(){
    if (initialize == 1){
      pxpos = pxpos - pxvel;
      pypos = pypos - pyvel;
      ellipse(pxpos, pypos, 5, 5);
    }
  }
  int initialization(){
    return initialize = 1;
  }
}

class Spaceship{
  void update(){
    //complicated trig to calculate the location of all the vertices
    a = cosMath(angle, xpos);
    b = sinMath(angle, ypos);
    c = cosMath(angle+2.0944, xpos);
    d = sinMath(angle+2.0944, ypos);
    e = cosMath(angle+4.18879, xpos);
    f = sinMath(angle+4.18879, ypos);
    triangle (a,b,c,d,e,f);
  }
}

float sinMath(float input, float axis){
  float output = 100*sin(input) - axis;
  return output;
}

float cosMath(float input, float axis){
  float output = 100*cos(input) - axis;
  return output;
}

//////////////////////////////////////////////////////////

void setup(){
size(1000,1000);
background (0);
stroke(0);
fill(255);
frameRate(30);
mods = new Bullet[10];
  for (int i = 0; i<10; i++){
    mods[i] = new Bullet(0,0);
  }  
}

/////////////////////////////////////////////////////////

void draw() {
  //Resetting the screen before the update
  background(0);
  
  //rotating the object
  if(mousePressed) {
    if(mouseButton == LEFT){
      angle=angle-0.05;
    }
    if(mouseButton == RIGHT){
      angle=angle+0.05;
    }
  }
  
  //Setting the speed of the object
    if(keyPressed && keyCode == UP){
        xvel = xvel + accel*cos(angle);
        yvel = yvel + accel*sin(angle);
    }
    
    xpos = xpos - xvel;
    ypos = ypos - yvel;

  if (keyboard == 0 && keyPressed && keyCode == ENTER){
    mods[INDEX] = new Bullet(xpos,ypos);
    mods[INDEX].initialization();
    INDEX = INDEX + 1;
    if (INDEX == 10){
      INDEX = 0;
    }
    keyboard = 1;
  }

  //Updating the position of the triangle
  rocket_triangle.update();
  
  for(Bullet mod : mods){
    mod.p_update();
  } 
  //Updating the position of all pellets
  
}
